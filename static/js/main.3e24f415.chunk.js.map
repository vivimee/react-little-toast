{"version":3,"sources":["webpack:///./src/components/Toast.less?2734","components/Toast.less","webpack:///./src/App.less?52ef","App.less","utils/serviceWorker.js","components/Toast.js","components/index.js","App.js","index.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","Boolean","window","location","hostname","match","InfoItem","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","timeup","display","_this2","_this$props$timeout","props","timeout","timmer","setTimeout","setState","clearTimeout","_this$state","message","react_default","a","createElement","className","concat","React","Component","ToastContainer","_this3","pushInfo","config","messages","objectSpread","_type","messageMapper","idx","Toast_InfoItem","assign","key","map","Toast","_this4","bindToastContainer","dom","toastContainer","info","ele","document","body","appendChild","render","Toast_ToastContainer","ref","App","run","_this$state2","value","onChange","e","target","type","onClick","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e24f415.chunk.js","sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--6-oneOf-8-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-8-3!./Toast.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js??ref--6-oneOf-8-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-8-3!./Toast.less\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js??ref--6-oneOf-8-1!../../node_modules/postcss-loader/src/index.js??postcss!../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-8-3!./Toast.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".rlt-toast-container {\\n  position: fixed;\\n  top: 10%;\\n  width: 90%;\\n  left: 0;\\n  right: 0;\\n  margin: auto;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  pointer-events: none;\\n}\\n.rlt-toast-item {\\n  margin-bottom: 10px;\\n  position: relative;\\n  -webkit-animation: toast-enter 0.2s ease forwards;\\n          animation: toast-enter 0.2s ease forwards;\\n}\\n.rlt-toast-item:last-child {\\n  margin-bottom: 0;\\n}\\n.rlt-toast-item.info {\\n  padding: 8px 20px;\\n  color: #fff;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  border-radius: 4px;\\n}\\n.rlt-toast-item.fade {\\n  -webkit-animation-name: toast-fade;\\n          animation-name: toast-fade;\\n}\\n@-webkit-keyframes toast-enter {\\n  from {\\n    bottom: -20px;\\n    opacity: 0.2;\\n  }\\n  to {\\n    bottom: 0;\\n    opacity: 1;\\n  }\\n}\\n@keyframes toast-enter {\\n  from {\\n    bottom: -20px;\\n    opacity: 0.2;\\n  }\\n  to {\\n    bottom: 0;\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes toast-fade {\\n  from {\\n    top: 0;\\n    opacity: 1;\\n  }\\n  to {\\n    top: -20px;\\n    opacity: 0;\\n  }\\n}\\n@keyframes toast-fade {\\n  from {\\n    top: 0;\\n    opacity: 1;\\n  }\\n  to {\\n    top: -20px;\\n    opacity: 0;\\n  }\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-8-1!../node_modules/postcss-loader/src/index.js??postcss!../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-8-3!./App.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-8-1!../node_modules/postcss-loader/src/index.js??postcss!../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-8-3!./App.less\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-8-1!../node_modules/postcss-loader/src/index.js??postcss!../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-8-3!./App.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-item {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 20px;\\n  margin: 10px auto;\\n  width: 80%;\\n}\\n.form-item .label {\\n  flex-shrink: 0;\\n  margin-right: 20px;\\n  width: 30%;\\n  text-align: right;\\n}\\n.form-item input {\\n  flex-grow: 1;\\n  outline: none;\\n  border: none;\\n  border-bottom: 1px solid #e7e7e7;\\n  padding: 10px 5px;\\n  font-size: 14px;\\n}\\n.submit-btn {\\n  width: 80%;\\n  margin: 20px auto;\\n  padding: 15px;\\n  background-color: #f63;\\n  border-radius: 4px;\\n  color: #fff;\\n  border: none;\\n  outline: none;\\n  display: block;\\n  font-size: 16px;\\n}\\n@media (min-width: 375px) {\\n  .page-content {\\n    width: 375px;\\n    margin: 0 auto;\\n  }\\n}\\n\", \"\"]);\n\n// exports\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint-disable */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable */\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport './Toast.less';\n// import PropTypes from 'prop-types';\n\nclass InfoItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      timeup: false,\n      display: true,\n    };\n  }\n\n  componentDidMount() {\n    const { timeout = 3000 } = this.props;\n    this.timmer = setTimeout(() => {\n      this.setState({ timeup: true }, () => {\n        this.timmer = setTimeout(() => {\n          this.setState({ display: false });\n        }, 200);\n      });\n    }, timeout);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timmer);\n  }\n\n  render() {\n    const { timeup, display } = this.state;\n    const { message } = this.props;\n    return display ? (\n      <div className={`rlt-toast-item info${timeup ? ' fade' : ''}`}>\n        {message}\n      </div>\n    ) : null;\n  }\n}\n\nclass ToastContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n    };\n  }\n\n  pushInfo = config => {\n    const { messages } = this.state;\n    this.setState({ messages: messages.concat([{ ...config, _type: 'info' }]) });\n  };\n\n  messageMapper = (config, idx) => {\n    if (config._type === 'info') {\n      return <InfoItem key={idx} {...config} />;\n    }\n  };\n\n  render() {\n    const { messages } = this.state;\n    return (<div className=\"rlt-toast-container\">\n      {messages.map(this.messageMapper)}\n    </div>);\n  }\n}\n\nToastContainer.propTypes = {\n  /** 按钮边距 */\n  // margin: PropTypes.string,\n};\n\nclass Toast {\n  constructor() {\n    if (typeof window === 'undefined') return;\n    const ele = document.createElement('div');\n    document.body.appendChild(ele);\n    render(<ToastContainer ref={this.bindToastContainer} />, ele);\n    this.ele = ele;\n  }\n\n  bindToastContainer = dom => {\n    this.toastContainer = dom;\n  };\n\n  info = config => {\n    this.toastContainer.pushInfo(config);\n  };\n}\n\nexport default new Toast();\n","import Toast from './Toast';\n\nexport default Toast;\n","import React, { Component } from 'react';\nimport Toast from 'src/components/index';\nimport './App.less';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: 'Hello World',\n      timeout: 3000,\n    };\n  }\n\n  run = () => {\n    const { message, timeout } = this.state;\n    Toast.info({ message, timeout });\n  };\n\n  render() {\n    const { message, timeout } = this.state;\n    return (\n      <div className=\"page-content\">\n        <header>\n          <div className=\"form-item\">\n            <span className=\"label\">text</span>\n            <input value={message} onChange={e => this.setState({ message: e.target.value })} />\n          </div>\n          <div className=\"form-item\">\n            <span className=\"label\">timeout</span>\n            <input value={timeout} onChange={e => this.setState({ timeout: e.target.value })} />\n          </div>\n          <button className=\"submit-btn\" type=\"button\" onClick={this.run}>\n            Show Toast\n          </button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './utils/serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}